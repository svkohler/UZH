end_date <- metrics_ID$end_date
# set the correct working directory to corresponding files
# source the general requirements file directly from different path here (not necessary)
source("./requirements.R", chdir=TRUE)
# load data matrix (dim: IDs x metrics)
metrics <- read.csv("Dummy_data/data.csv", sep=";")
# extract information about min/max values
# define IDs to loop over. Here dummy first three to see whether procedure works
IDs <- 1:1
for(i in IDs){
#get row of current ID
metrics_ID <- metrics[metrics$id==i,]
#extract date
start_date <- metrics_ID$start_date
end_date <- metrics_ID$end_date
# extract currency
curr <- metrics_ID$curr
# transform metrics in rectangular form for table. Fill row by row.
metrics_ID_table <- matrix(data=NA, nrow=5, ncol=5)
colnames(metrics_ID_table) <- c("Portfolio", "Benchmark", "SMI", "EuroStoxx", "S&P 500")
rownames(metrics_ID_table) <- c("Mean Raw Return", "Return Volatility", "Sharpe Ratio", "Benchmark adj. Return", "Residual Risk")
metrics_ID_table[1,] <- unlist(metrics_ID[5:9])
metrics_ID_table[2,] <- unlist(metrics_ID[10:14])
metrics_ID_table[3,] <- unlist(metrics_ID[15:19])
metrics_ID_table[4,1] <- unlist(metrics_ID[20])
metrics_ID_table[5,1] <- unlist(metrics_ID[21])
# transform investment style figures in rectangular form for table. Fill row by row.
inv_style_ID_table <- matrix(data=NA, nrow=5, ncol=4)
colnames(inv_style_ID_table) <- c("Portfolio", "SMI", "EuroStoxx", "S&P 500")
rownames(inv_style_ID_table) <- c("Market", "Size", "Value", "Momentum", "Diversification")
inv_style_ID_table[1,] <- unlist(metrics_ID[22:25])
inv_style_ID_table[2,] <- unlist(metrics_ID[26:29])
inv_style_ID_table[3,] <- unlist(metrics_ID[30:33])
inv_style_ID_table[4,] <- unlist(metrics_ID[34:37])
inv_style_ID_table[5,] <- unlist(metrics_ID[38:41])
# transform trading behaviour figures in rectangular form for table. Fill row by row.
trad_behav_ID_table <- matrix(data=NA, nrow=5, ncol=1)
colnames(trad_behav_ID_table) <- c("Portfolio")
rownames(trad_behav_ID_table) <- c("Turnover", "Temperament", "Activity", "Conviction", "Disposition effect")
trad_behav_ID_table[1,] <- unlist(metrics_ID[42])
trad_behav_ID_table[2,] <- unlist(metrics_ID[43])
trad_behav_ID_table[3,] <- unlist(metrics_ID[44])
trad_behav_ID_table[4,] <- unlist(metrics_ID[45])
trad_behav_ID_table[5,] <- unlist(metrics_ID[46])
# load the data file correspomding to the current ID
data_ID <- read.csv(paste0("./Dummy_data/", i, ".csv"), sep=";")
data_ID$date <- as.Date(data_ID$date, format="%d.%m.%Y")
# check if not empty
if(nrow(data_ID)==0){
print(sprintf("Dataframe for ID %i is empty.", i))
next()
}
rmarkdown::render(input = "./Feedbackreport_DE.Rmd",
output_format = "pdf_document",
output_file = paste("test_report_", i,"_", Sys.Date(), ".pdf", sep=''),
output_dir = "./LoopReports",
params = list(date = paste(as.character(start_date),as.character(end_date), sep="-"), Id = i, currency=as.name(curr)))
}
# set the correct working directory to corresponding files
# source the general requirements file directly from different path here (not necessary)
source("./requirements.R", chdir=TRUE)
# load data matrix (dim: IDs x metrics)
metrics <- read.csv("Dummy_data/data.csv", sep=";")
# extract information about min/max values
# define IDs to loop over. Here dummy first three to see whether procedure works
IDs <- 1:1
for(i in IDs){
#get row of current ID
metrics_ID <- metrics[metrics$id==i,]
#extract date
start_date <- metrics_ID$start_date
end_date <- metrics_ID$end_date
# extract currency
curr <- metrics_ID$curr
# transform metrics in rectangular form for table. Fill row by row.
metrics_ID_table <- matrix(data=NA, nrow=5, ncol=5)
colnames(metrics_ID_table) <- c("Portfolio", "Benchmark", "SMI", "EuroStoxx", "S&P 500")
rownames(metrics_ID_table) <- c("Mean Raw Return", "Return Volatility", "Sharpe Ratio", "Benchmark adj. Return", "Residual Risk")
metrics_ID_table[1,] <- unlist(metrics_ID[5:9])
metrics_ID_table[2,] <- unlist(metrics_ID[10:14])
metrics_ID_table[3,] <- unlist(metrics_ID[15:19])
metrics_ID_table[4,1] <- unlist(metrics_ID[20])
metrics_ID_table[5,1] <- unlist(metrics_ID[21])
# transform investment style figures in rectangular form for table. Fill row by row.
inv_style_ID_table <- matrix(data=NA, nrow=5, ncol=4)
colnames(inv_style_ID_table) <- c("Portfolio", "SMI", "EuroStoxx", "S&P 500")
rownames(inv_style_ID_table) <- c("Market", "Size", "Value", "Momentum", "Diversification")
inv_style_ID_table[1,] <- unlist(metrics_ID[22:25])
inv_style_ID_table[2,] <- unlist(metrics_ID[26:29])
inv_style_ID_table[3,] <- unlist(metrics_ID[30:33])
inv_style_ID_table[4,] <- unlist(metrics_ID[34:37])
inv_style_ID_table[5,] <- unlist(metrics_ID[38:41])
# transform trading behaviour figures in rectangular form for table. Fill row by row.
trad_behav_ID_table <- matrix(data=NA, nrow=5, ncol=1)
colnames(trad_behav_ID_table) <- c("Portfolio")
rownames(trad_behav_ID_table) <- c("Turnover", "Temperament", "Activity", "Conviction", "Disposition effect")
trad_behav_ID_table[1,] <- unlist(metrics_ID[42])
trad_behav_ID_table[2,] <- unlist(metrics_ID[43])
trad_behav_ID_table[3,] <- unlist(metrics_ID[44])
trad_behav_ID_table[4,] <- unlist(metrics_ID[45])
trad_behav_ID_table[5,] <- unlist(metrics_ID[46])
# load the data file correspomding to the current ID
data_ID <- read.csv(paste0("./Dummy_data/", i, ".csv"), sep=";")
data_ID$date <- as.Date(data_ID$date, format="%d.%m.%Y")
# check if not empty
if(nrow(data_ID)==0){
print(sprintf("Dataframe for ID %i is empty.", i))
next()
}
rmarkdown::render(input = "./Feedbackreport_DE.Rmd",
output_format = "pdf_document",
output_file = paste("test_report_", i,"_", Sys.Date(), ".pdf", sep=''),
output_dir = "./LoopReports",
params = list(date = paste(as.character(start_date),as.character(end_date), sep="-"), Id = i, currency=as.name(curr)))
}
# set the correct working directory to corresponding files
# source the general requirements file directly from different path here (not necessary)
source("./requirements.R", chdir=TRUE)
# load data matrix (dim: IDs x metrics)
metrics <- read.csv("Dummy_data/data.csv", sep=";")
# extract information about min/max values
# define IDs to loop over. Here dummy first three to see whether procedure works
IDs <- 1:1
for(i in IDs){
#get row of current ID
metrics_ID <- metrics[metrics$id==i,]
#extract date
start_date <- metrics_ID$start_date
end_date <- metrics_ID$end_date
# extract currency
curr <- metrics_ID$curr
# transform metrics in rectangular form for table. Fill row by row.
metrics_ID_table <- matrix(data=NA, nrow=5, ncol=5)
colnames(metrics_ID_table) <- c("Portfolio", "Benchmark", "SMI", "EuroStoxx", "S&P 500")
rownames(metrics_ID_table) <- c("Mean Raw Return", "Return Volatility", "Sharpe Ratio", "Benchmark adj. Return", "Residual Risk")
metrics_ID_table[1,] <- unlist(metrics_ID[5:9])
metrics_ID_table[2,] <- unlist(metrics_ID[10:14])
metrics_ID_table[3,] <- unlist(metrics_ID[15:19])
metrics_ID_table[4,1] <- unlist(metrics_ID[20])
metrics_ID_table[5,1] <- unlist(metrics_ID[21])
# transform investment style figures in rectangular form for table. Fill row by row.
inv_style_ID_table <- matrix(data=NA, nrow=5, ncol=4)
colnames(inv_style_ID_table) <- c("Portfolio", "SMI", "EuroStoxx", "S&P 500")
rownames(inv_style_ID_table) <- c("Market", "Size", "Value", "Momentum", "Diversification")
inv_style_ID_table[1,] <- unlist(metrics_ID[22:25])
inv_style_ID_table[2,] <- unlist(metrics_ID[26:29])
inv_style_ID_table[3,] <- unlist(metrics_ID[30:33])
inv_style_ID_table[4,] <- unlist(metrics_ID[34:37])
inv_style_ID_table[5,] <- unlist(metrics_ID[38:41])
# transform trading behaviour figures in rectangular form for table. Fill row by row.
trad_behav_ID_table <- matrix(data=NA, nrow=5, ncol=1)
colnames(trad_behav_ID_table) <- c("Portfolio")
rownames(trad_behav_ID_table) <- c("Turnover", "Temperament", "Activity", "Conviction", "Disposition effect")
trad_behav_ID_table[1,] <- unlist(metrics_ID[42])
trad_behav_ID_table[2,] <- unlist(metrics_ID[43])
trad_behav_ID_table[3,] <- unlist(metrics_ID[44])
trad_behav_ID_table[4,] <- unlist(metrics_ID[45])
trad_behav_ID_table[5,] <- unlist(metrics_ID[46])
# load the data file correspomding to the current ID
data_ID <- read.csv(paste0("./Dummy_data/", i, ".csv"), sep=";")
data_ID$date <- as.Date(data_ID$date, format="%d.%m.%Y")
# check if not empty
if(nrow(data_ID)==0){
print(sprintf("Dataframe for ID %i is empty.", i))
next()
}
rmarkdown::render(input = "./Feedbackreport_DE.Rmd",
output_format = "pdf_document",
output_file = paste("test_report_", i,"_", Sys.Date(), ".pdf", sep=''),
output_dir = "./LoopReports",
params = list(date = paste(as.character(start_date),as.character(end_date), sep="-"), Id = i, currency=as.name(curr)))
}
# set the correct working directory to corresponding files
# source the general requirements file directly from different path here (not necessary)
source("./requirements.R", chdir=TRUE)
# load data matrix (dim: IDs x metrics)
metrics <- read.csv("Dummy_data/data.csv", sep=";")
# extract information about min/max values
# define IDs to loop over. Here dummy first three to see whether procedure works
IDs <- 1:1
for(i in IDs){
#get row of current ID
metrics_ID <- metrics[metrics$id==i,]
#extract date
start_date <- metrics_ID$start_date
end_date <- metrics_ID$end_date
# extract currency
curr <- metrics_ID$curr
# transform metrics in rectangular form for table. Fill row by row.
metrics_ID_table <- matrix(data=NA, nrow=5, ncol=5)
colnames(metrics_ID_table) <- c("Portfolio", "Benchmark", "SMI", "EuroStoxx", "S&P 500")
rownames(metrics_ID_table) <- c("Mean Raw Return", "Return Volatility", "Sharpe Ratio", "Benchmark adj. Return", "Residual Risk")
metrics_ID_table[1,] <- unlist(metrics_ID[5:9])
metrics_ID_table[2,] <- unlist(metrics_ID[10:14])
metrics_ID_table[3,] <- unlist(metrics_ID[15:19])
metrics_ID_table[4,1] <- unlist(metrics_ID[20])
metrics_ID_table[5,1] <- unlist(metrics_ID[21])
# transform investment style figures in rectangular form for table. Fill row by row.
inv_style_ID_table <- matrix(data=NA, nrow=5, ncol=4)
colnames(inv_style_ID_table) <- c("Portfolio", "SMI", "EuroStoxx", "S&P 500")
rownames(inv_style_ID_table) <- c("Market", "Size", "Value", "Momentum", "Diversification")
inv_style_ID_table[1,] <- unlist(metrics_ID[22:25])
inv_style_ID_table[2,] <- unlist(metrics_ID[26:29])
inv_style_ID_table[3,] <- unlist(metrics_ID[30:33])
inv_style_ID_table[4,] <- unlist(metrics_ID[34:37])
inv_style_ID_table[5,] <- unlist(metrics_ID[38:41])
# transform trading behaviour figures in rectangular form for table. Fill row by row.
trad_behav_ID_table <- matrix(data=NA, nrow=5, ncol=1)
colnames(trad_behav_ID_table) <- c("Portfolio")
rownames(trad_behav_ID_table) <- c("Turnover", "Temperament", "Activity", "Conviction", "Disposition effect")
trad_behav_ID_table[1,] <- unlist(metrics_ID[42])
trad_behav_ID_table[2,] <- unlist(metrics_ID[43])
trad_behav_ID_table[3,] <- unlist(metrics_ID[44])
trad_behav_ID_table[4,] <- unlist(metrics_ID[45])
trad_behav_ID_table[5,] <- unlist(metrics_ID[46])
# load the data file correspomding to the current ID
data_ID <- read.csv(paste0("./Dummy_data/", i, ".csv"), sep=";")
data_ID$date <- as.Date(data_ID$date, format="%d.%m.%Y")
# check if not empty
if(nrow(data_ID)==0){
print(sprintf("Dataframe for ID %i is empty.", i))
next()
}
rmarkdown::render(input = "./Feedbackreport_DE.Rmd",
output_format = "pdf_document",
output_file = paste("test_report_", i,"_", Sys.Date(), ".pdf", sep=''),
output_dir = "./LoopReports",
params = list(date = paste(as.character(start_date),as.character(end_date), sep="-"), Id = i, currency=as.name(curr)))
}
# set the correct working directory to corresponding files
# source the general requirements file directly from different path here (not necessary)
source("./requirements.R", chdir=TRUE)
# load data matrix (dim: IDs x metrics)
metrics <- read.csv("Dummy_data/data.csv", sep=";")
# extract information about min/max values
# define IDs to loop over. Here dummy first three to see whether procedure works
IDs <- 1:1
for(i in IDs){
#get row of current ID
metrics_ID <- metrics[metrics$id==i,]
#extract date
start_date <- metrics_ID$start_date
end_date <- metrics_ID$end_date
# extract currency
curr <- metrics_ID$curr
# transform metrics in rectangular form for table. Fill row by row.
metrics_ID_table <- matrix(data=NA, nrow=5, ncol=5)
colnames(metrics_ID_table) <- c("Portfolio", "Benchmark", "SMI", "EuroStoxx", "S&P 500")
rownames(metrics_ID_table) <- c("Mean Raw Return", "Return Volatility", "Sharpe Ratio", "Benchmark adj. Return", "Residual Risk")
metrics_ID_table[1,] <- unlist(metrics_ID[5:9])
metrics_ID_table[2,] <- unlist(metrics_ID[10:14])
metrics_ID_table[3,] <- unlist(metrics_ID[15:19])
metrics_ID_table[4,1] <- unlist(metrics_ID[20])
metrics_ID_table[5,1] <- unlist(metrics_ID[21])
# transform investment style figures in rectangular form for table. Fill row by row.
inv_style_ID_table <- matrix(data=NA, nrow=5, ncol=4)
colnames(inv_style_ID_table) <- c("Portfolio", "SMI", "EuroStoxx", "S&P 500")
rownames(inv_style_ID_table) <- c("Market", "Size", "Value", "Momentum", "Diversification")
inv_style_ID_table[1,] <- unlist(metrics_ID[22:25])
inv_style_ID_table[2,] <- unlist(metrics_ID[26:29])
inv_style_ID_table[3,] <- unlist(metrics_ID[30:33])
inv_style_ID_table[4,] <- unlist(metrics_ID[34:37])
inv_style_ID_table[5,] <- unlist(metrics_ID[38:41])
# transform trading behaviour figures in rectangular form for table. Fill row by row.
trad_behav_ID_table <- matrix(data=NA, nrow=5, ncol=1)
colnames(trad_behav_ID_table) <- c("Portfolio")
rownames(trad_behav_ID_table) <- c("Turnover", "Temperament", "Activity", "Conviction", "Disposition effect")
trad_behav_ID_table[1,] <- unlist(metrics_ID[42])
trad_behav_ID_table[2,] <- unlist(metrics_ID[43])
trad_behav_ID_table[3,] <- unlist(metrics_ID[44])
trad_behav_ID_table[4,] <- unlist(metrics_ID[45])
trad_behav_ID_table[5,] <- unlist(metrics_ID[46])
# load the data file correspomding to the current ID
data_ID <- read.csv(paste0("./Dummy_data/", i, ".csv"), sep=";")
data_ID$date <- as.Date(data_ID$date, format="%d.%m.%Y")
# check if not empty
if(nrow(data_ID)==0){
print(sprintf("Dataframe for ID %i is empty.", i))
next()
}
rmarkdown::render(input = "./Feedbackreport_DE.Rmd",
output_format = "pdf_document",
output_file = paste("test_report_", i,"_", Sys.Date(), ".pdf", sep=''),
output_dir = "./LoopReports",
params = list(date = paste(as.character(start_date),as.character(end_date), sep="-"), Id = i, currency=as.name(curr)))
}
View(data)
knitr::opts_chunk$set(echo = TRUE)
#################
### Plot Investment Style
#################
# making use of custom stacking function
data <- stacking(data.frame(inv_style_ID_table))
# convert to factor
data$category <- factor(data$category, levels=c("Portfolio", "SMI", "EuroStoxx", "S.P.500"))
# define buffer for the arrow
buffer <- 0.05*(max(inv_style_ID_table)-min(inv_style_ID_table))
x_min <- min(inv_style_ID_table)-buffer
x_max <- max(inv_style_ID_table)+buffer
plot2 <- ggplot() +
# initiate necessary arrows
geom_segment(aes(x = x_min, y = 1, xend = x_max, yend = 1), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_max, y = 1, xend = x_min, yend = 1), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_min, y = 2, xend = x_max, yend = 2), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_max, y = 2, xend = x_min, yend = 2), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_min, y = 3, xend = x_max, yend = 3), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_max, y = 3, xend = x_min, yend = 3), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_min, y = 4, xend = x_max, yend = 4), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_max, y = 4, xend = x_min, yend = 4), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_min, y = 5, xend = x_max, yend = 5), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
geom_segment(aes(x = x_max, y = 5, xend = x_min, yend = 5), size=2,
arrow = arrow(length = unit(0.5, "cm")))+
# place points on arrows
geom_point(data=data, mapping=aes(x=value, y =as.numeric(factor(variable, levels=c("Diversifikation", "Momentum", "Value", "Grösse","Markt"))), shape=category, col=category, size=7), size=7)+
scale_y_continuous(breaks = 1:5, labels =c("Unterdiversifiziert", "Vergangene Verlierer", "Wachstumsaktien", "Grosse Unternehmen","Gering"), sec.axis = sec_axis(~. , breaks=1:5, labels=c("Gut diversifiziert", "Vergangene Gewinner", "Value-Aktien", "Kleine Unternehmen","Hoch"))) +
guides(size=FALSE)+
scale_shape_manual(labels = c("Portfolio", "SMI", "EuroStoxx", "S&P 500"), values=c(15,16,17,18))+
scale_color_manual(labels = c("Portfolio", "SMI", "EuroStoxx", "S&P 500"),values=c("#90353B", "#6E8E84", "#008BBC", "#938DD2"))+
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
legend.text=element_text(size=12),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
axis.text = element_text(size = 16),
legend.key.size = unit(1.5, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
# save for later inclusion
ggsave("Images/plot2.png", width = 11, height=4)
View(data)
# set the correct working directory to corresponding files
# source the general requirements file directly from different path here (not necessary)
source("./requirements.R", chdir=TRUE)
# load data matrix (dim: IDs x metrics)
metrics <- read.csv("Dummy_data/data.csv", sep=";")
# extract information about min/max values
# define IDs to loop over. Here dummy first three to see whether procedure works
IDs <- 1:1
for(i in IDs){
#get row of current ID
metrics_ID <- metrics[metrics$id==i,]
#extract date
start_date <- metrics_ID$start_date
end_date <- metrics_ID$end_date
# extract currency
curr <- metrics_ID$curr
# transform metrics in rectangular form for table. Fill row by row.
metrics_ID_table <- matrix(data=NA, nrow=5, ncol=5)
colnames(metrics_ID_table) <- c("Portfolio", "Benchmark", "SMI", "EuroStoxx", "S&P 500")
rownames(metrics_ID_table) <- c("Mean Raw Return", "Return Volatility", "Sharpe Ratio", "Benchmark adj. Return", "Residual Risk")
metrics_ID_table[1,] <- unlist(metrics_ID[5:9])
metrics_ID_table[2,] <- unlist(metrics_ID[10:14])
metrics_ID_table[3,] <- unlist(metrics_ID[15:19])
metrics_ID_table[4,1] <- unlist(metrics_ID[20])
metrics_ID_table[5,1] <- unlist(metrics_ID[21])
# transform investment style figures in rectangular form for table. Fill row by row.
inv_style_ID_table <- matrix(data=NA, nrow=5, ncol=4)
colnames(inv_style_ID_table) <- c("Portfolio", "SMI", "EuroStoxx", "S&P 500")
rownames(inv_style_ID_table) <- c("Market", "Size", "Value", "Momentum", "Diversification")
inv_style_ID_table[1,] <- unlist(metrics_ID[22:25])
inv_style_ID_table[2,] <- unlist(metrics_ID[26:29])
inv_style_ID_table[3,] <- unlist(metrics_ID[30:33])
inv_style_ID_table[4,] <- unlist(metrics_ID[34:37])
inv_style_ID_table[5,] <- unlist(metrics_ID[38:41])
# transform trading behaviour figures in rectangular form for table. Fill row by row.
trad_behav_ID_table <- matrix(data=NA, nrow=5, ncol=1)
colnames(trad_behav_ID_table) <- c("Portfolio")
rownames(trad_behav_ID_table) <- c("Turnover", "Temperament", "Activity", "Conviction", "Disposition effect")
trad_behav_ID_table[1,] <- unlist(metrics_ID[42])
trad_behav_ID_table[2,] <- unlist(metrics_ID[43])
trad_behav_ID_table[3,] <- unlist(metrics_ID[44])
trad_behav_ID_table[4,] <- unlist(metrics_ID[45])
trad_behav_ID_table[5,] <- unlist(metrics_ID[46])
# load the data file correspomding to the current ID
data_ID <- read.csv(paste0("./Dummy_data/", i, ".csv"), sep=";")
data_ID$date <- as.Date(data_ID$date, format="%d.%m.%Y")
# check if not empty
if(nrow(data_ID)==0){
print(sprintf("Dataframe for ID %i is empty.", i))
next()
}
rmarkdown::render(input = "./Feedbackreport_DE.Rmd",
output_format = "pdf_document",
output_file = paste("test_report_", i,"_", Sys.Date(), ".pdf", sep=''),
output_dir = "./LoopReports",
params = list(date = paste(as.character(start_date),as.character(end_date), sep="-"), Id = i, currency=as.name(curr)))
}
# set the correct working directory to corresponding files
# source the general requirements file directly from different path here (not necessary)
source("./requirements.R", chdir=TRUE)
# load data matrix (dim: IDs x metrics)
metrics <- read.csv("Dummy_data/data.csv", sep=";")
# extract information about min/max values
# define IDs to loop over. Here dummy first three to see whether procedure works
IDs <- 1:3
for(i in IDs){
#get row of current ID
metrics_ID <- metrics[metrics$id==i,]
#extract date
start_date <- metrics_ID$start_date
end_date <- metrics_ID$end_date
# extract currency
curr <- metrics_ID$curr
# transform metrics in rectangular form for table. Fill row by row.
metrics_ID_table <- matrix(data=NA, nrow=5, ncol=5)
colnames(metrics_ID_table) <- c("Portfolio", "Benchmark", "SMI", "EuroStoxx", "S&P 500")
rownames(metrics_ID_table) <- c("Mean Raw Return", "Return Volatility", "Sharpe Ratio", "Benchmark adj. Return", "Residual Risk")
metrics_ID_table[1,] <- unlist(metrics_ID[5:9])
metrics_ID_table[2,] <- unlist(metrics_ID[10:14])
metrics_ID_table[3,] <- unlist(metrics_ID[15:19])
metrics_ID_table[4,1] <- unlist(metrics_ID[20])
metrics_ID_table[5,1] <- unlist(metrics_ID[21])
# transform investment style figures in rectangular form for table. Fill row by row.
inv_style_ID_table <- matrix(data=NA, nrow=5, ncol=4)
colnames(inv_style_ID_table) <- c("Portfolio", "SMI", "EuroStoxx", "S&P 500")
rownames(inv_style_ID_table) <- c("Market", "Size", "Value", "Momentum", "Diversification")
inv_style_ID_table[1,] <- unlist(metrics_ID[22:25])
inv_style_ID_table[2,] <- unlist(metrics_ID[26:29])
inv_style_ID_table[3,] <- unlist(metrics_ID[30:33])
inv_style_ID_table[4,] <- unlist(metrics_ID[34:37])
inv_style_ID_table[5,] <- unlist(metrics_ID[38:41])
# transform trading behaviour figures in rectangular form for table. Fill row by row.
trad_behav_ID_table <- matrix(data=NA, nrow=5, ncol=1)
colnames(trad_behav_ID_table) <- c("Portfolio")
rownames(trad_behav_ID_table) <- c("Turnover", "Temperament", "Activity", "Conviction", "Disposition effect")
trad_behav_ID_table[1,] <- unlist(metrics_ID[42])
trad_behav_ID_table[2,] <- unlist(metrics_ID[43])
trad_behav_ID_table[3,] <- unlist(metrics_ID[44])
trad_behav_ID_table[4,] <- unlist(metrics_ID[45])
trad_behav_ID_table[5,] <- unlist(metrics_ID[46])
# load the data file correspomding to the current ID
data_ID <- read.csv(paste0("./Dummy_data/", i, ".csv"), sep=";")
data_ID$date <- as.Date(data_ID$date, format="%d.%m.%Y")
# check if not empty
if(nrow(data_ID)==0){
print(sprintf("Dataframe for ID %i is empty.", i))
next()
}
rmarkdown::render(input = "./Feedbackreport_DE.Rmd",
output_format = "pdf_document",
output_file = paste("test_report_", i,"_", Sys.Date(), ".pdf", sep=''),
output_dir = "./LoopReports",
params = list(date = paste(as.character(start_date),as.character(end_date), sep="-"), Id = i, currency=as.name(curr)))
}
# set the correct working directory to corresponding files
# source the general requirements file directly from different path here (not necessary)
source("./requirements.R", chdir=TRUE)
# load data matrix (dim: IDs x metrics)
metrics <- read.csv("Dummy_data/data.csv", sep=";")
# extract information about min/max values
# define IDs to loop over. Here dummy first three to see whether procedure works
IDs <- 1:3
for(i in IDs){
#get row of current ID
metrics_ID <- metrics[metrics$id==i,]
#extract date
start_date <- metrics_ID$start_date
end_date <- metrics_ID$end_date
# extract currency
curr <- metrics_ID$curr
# transform metrics in rectangular form for table. Fill row by row.
metrics_ID_table <- matrix(data=NA, nrow=5, ncol=5)
colnames(metrics_ID_table) <- c("Portfolio", "Benchmark", "SMI", "EuroStoxx", "S&P 500")
rownames(metrics_ID_table) <- c("Mean Raw Return", "Return Volatility", "Sharpe Ratio", "Benchmark adj. Return", "Residual Risk")
metrics_ID_table[1,] <- unlist(metrics_ID[5:9])
metrics_ID_table[2,] <- unlist(metrics_ID[10:14])
metrics_ID_table[3,] <- unlist(metrics_ID[15:19])
metrics_ID_table[4,1] <- unlist(metrics_ID[20])
metrics_ID_table[5,1] <- unlist(metrics_ID[21])
# transform investment style figures in rectangular form for table. Fill row by row.
inv_style_ID_table <- matrix(data=NA, nrow=5, ncol=4)
colnames(inv_style_ID_table) <- c("Portfolio", "SMI", "EuroStoxx", "S&P 500")
rownames(inv_style_ID_table) <- c("Market", "Size", "Value", "Momentum", "Diversification")
inv_style_ID_table[1,] <- unlist(metrics_ID[22:25])
inv_style_ID_table[2,] <- unlist(metrics_ID[26:29])
inv_style_ID_table[3,] <- unlist(metrics_ID[30:33])
inv_style_ID_table[4,] <- unlist(metrics_ID[34:37])
inv_style_ID_table[5,] <- unlist(metrics_ID[38:41])
# transform trading behaviour figures in rectangular form for table. Fill row by row.
trad_behav_ID_table <- matrix(data=NA, nrow=5, ncol=1)
colnames(trad_behav_ID_table) <- c("Portfolio")
rownames(trad_behav_ID_table) <- c("Turnover", "Temperament", "Activity", "Conviction", "Disposition effect")
trad_behav_ID_table[1,] <- unlist(metrics_ID[42])
trad_behav_ID_table[2,] <- unlist(metrics_ID[43])
trad_behav_ID_table[3,] <- unlist(metrics_ID[44])
trad_behav_ID_table[4,] <- unlist(metrics_ID[45])
trad_behav_ID_table[5,] <- unlist(metrics_ID[46])
# load the data file correspomding to the current ID
data_ID <- read.csv(paste0("./Dummy_data/", i, ".csv"), sep=";")
data_ID$date <- as.Date(data_ID$date, format="%d.%m.%Y")
# check if not empty
if(nrow(data_ID)==0){
print(sprintf("Dataframe for ID %i is empty.", i))
next()
}
rmarkdown::render(input = "./Feedbackreport_DE.Rmd",
output_format = "pdf_document",
output_file = paste("test_report_", i,"_", Sys.Date(), ".pdf", sep=''),
output_dir = "./LoopReports",
params = list(date = paste(as.character(start_date),as.character(end_date), sep="-"), Id = i, currency=as.name(curr)))
}
